# Frontend Project-Specific Instructions for Cursor AI

## General Guidelines
- Write clean, maintainable TypeScript/React code
- Follow Next.js 15.x app router conventions
- Use proper TypeScript types and interfaces
- Implement responsive design patterns
- Follow accessibility (a11y) best practices

## Project Structure
- Strict directory structure:
  - `src/` - Source code root
    - `app/` - Next.js app router pages and layouts
      - `layout.tsx` - Root layout with providers
      - `page.tsx` - Root page
      - `auth/` - Authentication pages
        - `login/` - Login page
        - `callback/` - OAuth callback handling
    - `components/` - React components
      - `ui/` - shadcn/ui components
      - `auth/` - Authentication components
      - `shared/` - Reusable components
    - `lib/` - Utility functions and hooks
    - `config/` - Configuration files
      - `index.ts` - AppKit and Wagmi configuration
    - `context/` - React context providers
    - `types/` - TypeScript type definitions
    - `styles/` - Global styles and CSS modules
  - `public/` - Static assets

## Authentication Structure
auth.files.required:
  - src/config/index.ts:
      description: "AppKit and Wagmi configuration with multichain support"
      required_exports:
        - wagmiAdapter
        - solanaWeb3JsAdapter
        - networks
        - config
        - modal
      implementation_notes:
        - Create adapters separately for EVM and Solana
        - Use cookieStorage for persistence
        - Define networks array with both EVM and Solana networks
        - Create modal with both adapters
  
  - src/app/layout.tsx:
      description: "Root layout with minimal provider setup"
      required_components:
        - WagmiProvider
        - QueryClientProvider
      implementation_notes:
        - Get cookies from headers
        - Initialize wagmi state from cookies
        - No need for custom AppKit provider
  
  - src/app/auth/login/page.tsx:
      description: "Login page with AppKit modal"
      required_hooks:
        - useAppKitAccount
        - useAppKitState
      implementation_notes:
        - Use modal.open() for connection
        - Use AppKit hooks for connection state
        - Don't mix wagmi and AppKit hooks
  
  - src/context/index.tsx:
      description: "Context provider setup"
      required_components:
        - WagmiProvider
        - QueryClientProvider
      implementation_notes:
        - Keep provider setup minimal
        - Initialize state from cookies
        - No need for custom providers

## Authentication Flow
auth.flow:
  - Connection:
    - Use modal.open() from AppKit config
    - Handle both EVM and Solana through the same modal
    - Don't implement custom connection logic
  
  - State Management:
    - Use useAppKitAccount for connection state
    - Use useAppKitState for loading state
    - Don't mix wagmi and AppKit state
  
  - Redirection:
    - Check isConnected from useAppKitAccount
    - Redirect after successful connection
    - Handle loading states from useAppKitState

## Required Environment Variables
env.required:
  - NEXT_PUBLIC_PROJECT_ID:
      description: "Reown AppKit project ID"
      required: true
  - NEXT_PUBLIC_APP_URL:
      description: "Frontend application URL"
      required: true

## State Management
state.rules:
  - Use AppKit hooks exclusively for auth state:
    - useAppKitAccount: { isConnected, address, caipAddress }
    - useAppKitState: { loading, activeChain }
    - useAppKitEvents: For connection events
  - Don't mix wagmi hooks with AppKit hooks
  - Use cookies for state persistence
  - Handle loading states through AppKit

## Security Requirements
security.rules:
  - Use cookieStorage for state persistence
  - Initialize state from cookies in layout
  - Follow AppKit's multichain security model
  - Don't implement custom auth logic

## Reference Documentation
references:
  - title: "AppKit Multichain Example"
    url: "https://github.com/reown-com/appkit-web-examples/tree/main/nextjs/next-multichain-app-router"
    key_files:
      - src/config/index.ts
      - src/context/index.tsx
      - src/app/layout.tsx
  - title: "AppKit Documentation"
    url: "https://docs.reown.com/appkit" 