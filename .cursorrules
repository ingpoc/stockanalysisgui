# Frontend Project-Specific Instructions for Cursor AI

## General Guidelines
- Write clean, maintainable TypeScript/React code
- Follow Next.js 15.x app router conventions
- Use proper TypeScript types and interfaces
- Implement responsive design patterns
- Follow accessibility (a11y) best practices

## Project Structure
- Strict directory structure:
  - `src/` - Source code root
    - `app/` - Next.js app router pages and layouts
      - `layout.tsx` - Root layout with AppKit provider
      - `page.tsx` - Root page
      - `auth/` - Authentication pages
        - `login/` - Login page
        - `callback/` - OAuth callback handling
    - `components/` - React components
      - `ui/` - shadcn/ui components
      - `auth/` - Authentication components
        - `disconnect-handler.tsx` - Disconnect state handler
        - `connect-button.tsx` - Connect wallet button
      - `shared/` - Reusable components
    - `lib/` - Utility functions and hooks
    - `config/` - Configuration files
      - `index.ts` - AppKit and Wagmi configuration
    - `context/` - React context providers
    - `types/` - TypeScript type definitions
    - `styles/` - Global styles and CSS modules
  - `public/` - Static assets

## Authentication Structure
auth.files.required:
  - src/config/index.ts:
      description: "AppKit and Wagmi configuration with multichain support"
      required_exports:
        - appKit
        - wagmiAdapter
        - config
  
  - src/app/layout.tsx:
      description: "Root layout with AppKit provider setup"
      required_components:
        - AppKitProvider
        - DisconnectHandler
  
  - src/app/auth/login/page.tsx:
      description: "Login page with wallet and social login"
      required_hooks:
        - useAppKit
        - useRouter
  
  - src/components/auth/disconnect-handler.tsx:
      description: "Handles disconnection and redirects"
      required_hooks:
        - useAppKit
        - useRouter
        - useEffect
  
  - src/components/auth/connect-button.tsx:
      description: "Connect wallet button component"
      required_hooks:
        - useAppKit

auth.files.optional:
  - src/app/auth/callback/page.tsx:
      description: "OAuth callback handling"
  - src/components/auth/profile.tsx:
      description: "User profile display"

## Required Environment Variables
env.required:
  - NEXT_PUBLIC_PROJECT_ID:
      description: "Reown AppKit project ID"
      required: true
  - NEXT_PUBLIC_APP_URL:
      description: "Frontend application URL"
      required: true
  - GOOGLE_CLIENT_ID:
      description: "Google OAuth client ID"
      required: false
  - GOOGLE_CLIENT_SECRET:
      description: "Google OAuth client secret"
      required: false
  - APPLE_CLIENT_ID:
      description: "Apple OAuth client ID"
      required: false
  - APPLE_CLIENT_SECRET:
      description: "Apple OAuth client secret"
      required: false

## Component Guidelines
components.rules:
  - Use TypeScript for all components
  - Implement proper prop types
  - Follow functional component patterns
  - Use proper error boundaries
  - Implement loading states
  - Handle edge cases
  - Use AppKit hooks for wallet interactions

## State Management
state.rules:
  - Use AppKit hooks for authentication state:
    - useAppKit for connection and modal
    - isConnected for auth state checks
  - Use React hooks for local state
  - Use TanStack Query for data fetching
  - Handle loading and error states
  - Cache wallet state appropriately

## Styling Requirements
styling.rules:
  - Use Tailwind CSS for styling
  - Follow design system tokens
  - Implement dark mode support
  - Use CSS modules for component-specific styles

## Security Requirements
security.rules:
  - Implement proper route protection
  - Handle authentication state securely
  - Implement proper CORS settings
  - Sanitize user inputs
  - Follow AppKit security guidelines
  - Protect API routes
  - Handle session management

## Performance Requirements
performance.rules:
  - Implement code splitting
  - Use proper image optimization
  - Implement lazy loading
  - Monitor and optimize bundle size
  - Use proper meta tags for SEO

## Documentation Requirements
documentation.rules:
  - Document components with proper JSDoc
  - Maintain README.md
  - Document custom hooks
  - Add comments for complex logic
  - Document authentication flow

## Reference Documentation
references:
  - title: "AppKit Multichain Example"
    url: "https://github.com/reown-com/appkit-web-examples/tree/main/nextjs/next-multichain-app-router"
  - title: "AppKit Documentation"
    url: "https://docs.reown.com/appkit"
  - title: "Next.js Documentation"
    url: "https://nextjs.org/docs" 